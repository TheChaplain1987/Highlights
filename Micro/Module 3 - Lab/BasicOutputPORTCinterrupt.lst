CCS PCH C Compiler, Version 5.008, 5967               20-Sep-23 20:33

               Filename:   D:\Microcontrollers\External Interrupts\Module 3 - Lab\BasicOutputPORTCinterrupt.lst

               ROM used:   572 bytes (2%)
                           Largest free fragment is 32192
               RAM used:   63 (4%) at main() level
                           64 (4%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00E8
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.4
004A:  GOTO   0054
004E:  BTFSC  FF2.1
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <18f4520.h> 
.................... //////// Standard Header file for the PIC18F4520 device //////////////// 
.................... #device PIC18F4520 
*
0214:  MOVFF  FF2,0D
0218:  BCF    FF2.7
021A:  ADDWF  FE8,W
021C:  CLRF   FF7
021E:  RLCF   FF7,F
0220:  ADDLW  39
0222:  MOVWF  FF6
0224:  MOVLW  02
0226:  ADDWFC FF7,F
0228:  TBLRD*-
022A:  MOVF   FF5,W
022C:  MOVWF  FFA
022E:  TBLRD*
0230:  MOVF   FF5,W
0232:  BTFSC  0D.7
0234:  BSF    FF2.7
0236:  MOVWF  FF9
0238:  DATA D0,01
023A:  DATA DE,01
023C:  DATA EC,01
023E:  DATA FA,01
....................  
.................... #list 
....................  
.................... #use delay( clock = 20000000 )  // Set clock to 20MHz 
.................... #fuses HS, NOWDT, NOLVP 
.................... #include "../../Library/myLibrary.h" 
.................... // A library for the PIC18F4520 
....................  
.................... int *TRISA = 0xF92; // Connect to TRISx 
.................... int *TRISB = 0xF93; 
.................... int *TRISC = 0xF94; 
.................... int *TRISD = 0xF95; 
.................... int *TRISE = 0xF96; 
....................  
.................... int *LATA = 0xF89;  // Connect to LATx 
.................... int *LATB = 0xF8A; 
.................... int *LATC = 0xF8B; 
.................... int *LATD = 0xF8C; 
.................... int *LATE = 0xF8D; 
....................  
.................... int *PORTA = 0xF80; // Connect to LATx 
.................... int *PORTB = 0xF81; 
.................... int *PORTC = 0xF82; 
.................... int *PORTD = 0xF83; 
.................... int *PORTE = 0xF84; 
....................  
.................... struct _adcon1 {   // Analog vs digital 
....................    int PCFGx:4; 
....................    int VCFG0:1; 
....................    int VCFG1:1; 
....................    int unused:2; 
.................... }; 
.................... struct _adcon1 *ADCON1 = 0xFC1; 
....................  
.................... struct _intcon { 
....................    int RBIF:1; 
....................    int INT0IF:1; 
....................    int TMR0IF:1; 
....................    int RBIE:1; 
....................    int INT0IE:1; 
....................    int TMR0IE:1; 
....................    int PEIE:1; 
....................    int GIE:1; 
.................... }; 
.................... struct _intcon *INTCON = 0xFF2; 
....................  
.................... struct _intcon3 { 
....................    int INT1IF:1; 
....................    int INT2IF:1; 
....................    int unused:1; 
....................    int INT1IE:1; 
....................    int INT2IE:1; 
....................    int notused:1; 
....................    int INT1IP:1; 
....................    int INT2IP:1; 
.................... }; 
.................... struct _intcon3 *INTCON3 = 0xFF0; 
....................  
.................... struct _intcon2 {  // Interrupts 
....................    int RBIP:1; 
....................    int unused:1; 
....................    int TMR0IP:1; 
....................    int notused:1; 
....................    int INTEDG2:1; 
....................    int INTEDG1:1; 
....................    int INTEDG0:1; 
....................    int RBPU:1; 
.................... }; 
.................... struct _intcon2 *INTCON2 = 0xFF1; 
....................  
.................... #include "../../Library/interrupts.h" 
.................... // Function to control the external interrupt for B0 
.................... // Inputs: x = 1 for raising edge, 0 for falling edge 
.................... void ext_int_B0( int x ); 
....................  
.................... void ext_int_B0( int x ) { 
....................    INTCON2 -> INTEDG0 = x; 
....................    INTCON -> INT0IE = 1; 
....................    INTCON -> PEIE = 1; 
....................    INTCON -> GIE = 1; 
.................... } 
....................  
.................... // Function to control the external interrupt for B1 
.................... // Inputs: x = 1 for raising edge, 0 for falling edge 
.................... void ext_int_B1( int x ); 
....................  
.................... void ext_int_B1( int x ) { 
....................    INTCON2 -> INTEDG1 = x; 
*
009E:  MOVF   3A,W
00A0:  MOVWF  01
00A2:  MOVFF  3B,03
00A6:  MOVWF  3E
00A8:  MOVFF  3B,3F
00AC:  BTFSC  3D.0
00AE:  BRA    00BC
00B0:  MOVFF  3F,FEA
00B4:  MOVFF  3E,FE9
00B8:  BCF    FEF.5
00BA:  BRA    00C6
00BC:  MOVFF  3F,FEA
00C0:  MOVFF  3E,FE9
00C4:  BSF    FEF.5
....................    INTCON3 -> INT1IE = 1; 
00C6:  MOVF   38,W
00C8:  MOVWF  FE9
00CA:  MOVFF  39,FEA
00CE:  BSF    FEF.3
....................    INTCON -> PEIE = 1; 
00D0:  MOVFF  36,FE9
00D4:  MOVFF  37,FEA
00D8:  BSF    FEF.6
....................    INTCON -> GIE = 1; 
00DA:  MOVFF  36,FE9
00DE:  MOVFF  37,FEA
00E2:  BSF    FEF.7
00E4:  GOTO   01C2 (RETURN)
.................... } 
....................  
.................... // Function to control the external interrupt for B1 
.................... // Inputs: x = 1 for raising edge, 0 for falling edge 
.................... void ext_int_B2( int x ); 
....................  
.................... void ext_int_B2( int x ) { 
....................    INTCON2 -> INTEDG2 = x; 
....................    INTCON3 -> INT2IE = 1; 
....................    INTCON -> PEIE = 1; 
....................    INTCON -> GIE = 1; 
.................... } 
....................  
....................  
.................... int index = 1; 
....................  
.................... #INT_EXT 
.................... void int_ext_isr() { 
....................    index++; 
*
0096:  INCF   3C,F
0098:  BCF    FF2.1
009A:  GOTO   0054
.................... } 
....................  
.................... main() { 
*
00E8:  CLRF   FF8
00EA:  BCF    FD0.7
00EC:  BSF    07.7
00EE:  MOVLW  0F
00F0:  MOVWF  17
00F2:  MOVLW  92
00F4:  MOVWF  16
00F6:  MOVLW  0F
00F8:  MOVWF  19
00FA:  MOVLW  93
00FC:  MOVWF  18
00FE:  MOVLW  0F
0100:  MOVWF  1B
0102:  MOVLW  94
0104:  MOVWF  1A
0106:  MOVLW  0F
0108:  MOVWF  1D
010A:  MOVLW  95
010C:  MOVWF  1C
010E:  MOVLW  0F
0110:  MOVWF  1F
0112:  MOVLW  96
0114:  MOVWF  1E
0116:  MOVLW  0F
0118:  MOVWF  21
011A:  MOVLW  89
011C:  MOVWF  20
011E:  MOVLW  0F
0120:  MOVWF  23
0122:  MOVLW  8A
0124:  MOVWF  22
0126:  MOVLW  0F
0128:  MOVWF  25
012A:  MOVLW  8B
012C:  MOVWF  24
012E:  MOVLW  0F
0130:  MOVWF  27
0132:  MOVLW  8C
0134:  MOVWF  26
0136:  MOVLW  0F
0138:  MOVWF  29
013A:  MOVLW  8D
013C:  MOVWF  28
013E:  MOVLW  0F
0140:  MOVWF  2B
0142:  MOVLW  80
0144:  MOVWF  2A
0146:  MOVLW  0F
0148:  MOVWF  2D
014A:  MOVLW  81
014C:  MOVWF  2C
014E:  MOVLW  0F
0150:  MOVWF  2F
0152:  MOVLW  82
0154:  MOVWF  2E
0156:  MOVLW  0F
0158:  MOVWF  31
015A:  MOVLW  83
015C:  MOVWF  30
015E:  MOVLW  0F
0160:  MOVWF  33
0162:  MOVLW  84
0164:  MOVWF  32
0166:  MOVLW  0F
0168:  MOVWF  35
016A:  MOVLW  C1
016C:  MOVWF  34
016E:  MOVLW  0F
0170:  MOVWF  37
0172:  MOVLW  F2
0174:  MOVWF  36
0176:  MOVLW  0F
0178:  MOVWF  39
017A:  MOVLW  F0
017C:  MOVWF  38
017E:  MOVLW  0F
0180:  MOVWF  3B
0182:  MOVLW  F1
0184:  MOVWF  3A
0186:  MOVLW  01
0188:  MOVWF  3C
018A:  MOVF   FC1,W
018C:  ANDLW  C0
018E:  IORLW  0F
0190:  MOVWF  FC1
0192:  MOVLW  07
0194:  MOVWF  FB4
....................  
....................    // Setting PORTC 
....................    *TRISC = 0x00;          // Make all PORTC output 
0196:  MOVFF  1A,FE9
019A:  MOVFF  1B,FEA
019E:  CLRF   FEF
....................     
....................    // Setting PORTB 
....................    ADCON1 -> PCFGx = 15;   // ALL analog 
01A0:  MOVFF  34,FE9
01A4:  MOVFF  35,FEA
01A8:  MOVLW  F0
01AA:  ANDWF  FEF,W
01AC:  IORLW  0F
01AE:  MOVWF  FEF
....................    *TRISB = 0x02;          // Make B0 input  
01B0:  MOVFF  18,FE9
01B4:  MOVFF  19,FEA
01B8:  MOVLW  02
01BA:  MOVWF  FEF
....................    ext_int_B1( 1 ); 
01BC:  MOVLW  01
01BE:  MOVWF  3D
01C0:  BRA    009E
....................     
....................    while( 1 ) { 
....................     
....................       switch( index ) { 
01C2:  MOVLW  01
01C4:  SUBWF  3C,W
01C6:  ADDLW  FC
01C8:  BC    0206
01CA:  ADDLW  04
01CC:  GOTO   0214
....................          case 1:; 
....................             *LATC = 0x1F; 
01D0:  MOVFF  24,FE9
01D4:  MOVFF  25,FEA
01D8:  MOVLW  1F
01DA:  MOVWF  FEF
....................             break; 
01DC:  BRA    0206
....................          case 2: 
....................             *LATC = 0x2F; 
01DE:  MOVFF  24,FE9
01E2:  MOVFF  25,FEA
01E6:  MOVLW  2F
01E8:  MOVWF  FEF
....................             break; 
01EA:  BRA    0206
....................          case 3: 
....................             *LATC = 0x4F; 
01EC:  MOVFF  24,FE9
01F0:  MOVFF  25,FEA
01F4:  MOVLW  4F
01F6:  MOVWF  FEF
....................             break; 
01F8:  BRA    0206
....................          case 4: 
....................             *LATC = 0x8F; 
01FA:  MOVFF  24,FE9
01FE:  MOVFF  25,FEA
0202:  MOVLW  8F
0204:  MOVWF  FEF
....................             break; 
....................       } 
....................        
....................       if( index == 5 ) { 
0206:  MOVF   3C,W
0208:  SUBLW  05
020A:  BNZ   0210
....................       index = 1; 
020C:  MOVLW  01
020E:  MOVWF  3C
....................       } 
0210:  BRA    01C2
....................        
....................    } 
.................... } 
0212:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
